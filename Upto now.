Upto now, I have finished the "Into to DevOps" course from the "IBM DevOps and Software Engineering Professional Certificate" course series by IBM on coursera.

Here I learned the following:
1. History of DevOps: Learned about predecessors of DevOps, Waterfall Development, Agile development, Extreme programming etc, and how they were inefficient. How DevOps started. Patrick Debois as the father of DevOps.
2. What DevOps really is: DevOps is not a job role. Nor it is Dev and Ops working together. Nor is it a separate team. It is a culture. It is a paradigm of Software development. It includes 3 main pillars: Culture, Methods and tools.
3. Learned brieflt about extensive concepts used in DevOps : Social coding (Using github properly), Pair programming, Working in small batches, MVP, TDD(Red, Green, Refactor) and test automation, BDD, Gherkin syntax, Cloud Native Microservices, Monolith architechture, Designing for failure, Retry pattern, Cascade error prevention (Circuit Breaker Pattern, Bulk head pattern), Chaos engineering, Taylorism, Infrastructure as code, CI/CD and continuous deployment, Organizational structure and application structure for DevOps(Conway's law), Vanity Metrics vs Actionable metrics, Rewarding for A and hoping for B (eg. Giving rewards based on lines of code vs based on number of social interactions), Culture measurements, SRE.
